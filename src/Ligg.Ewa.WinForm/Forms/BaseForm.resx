<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="RunningStatusSectionBackTaskRegionImageTextButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAD9UlEQVRYR8VX23IUVRTNgzxS5Yv+hJcq
        X1VCIFqWYC5IYiSBmEQhBGIkCjyrfANS8mAu3+BfKE8+qZSQSTKX7unu6enb9G0We51Jj0zVecnEGVfV
        qj3n9D57rdPd+3TNiOCVnZ2dX3d3d7G9vY2tra2BkhrUoia1aeA0J4YNalKbBl6jK+KfZ3t49nywpAZB
        TWrTwOu8NcTzvRL2Svso7R8MhKxNDYKa1O4xsFc6wP7B4UBJDUJroCQJB4flgZIahNYAEw7LFcWysFL5
        lxwX105CahBaA0woV6qKRq0K1zLgO4aKRq2GSrWGas3oi2VZy7rUILQGKpJQlUSKeSI6+fAPvPXjExU9
        24RVr8NtuPA8v8Omh6bQdZs9bDZJr5vHNaZZV7WpQWgNMKEmbk3DQNSo48PHf2Nq66mKkWtJoQZGz57D
        xYkpXJ75DPMLi1heuY61W+v4ZvMuNu/ex631DaxcX8W1xSXMzl3BxOQ0xs6Nw3EaMAxTaRBaAxRnUt00
        ETQsTMvO337wREWOHdtWOwuCsEM/gC/s3pEj+qTMF3lcY1m2qk0NQmvAqJsw5TbXhY5tIWzaiH1bRY7r
        lgVLTPRDrmVtahBaA6YkMbEjJDt2bLntIi6R4+LaSUgNQmugcGsL3YaDlt9AFroqcmw7Dhx5D/oh1xb1
        Ca0BJpENEYsDVz37N3/4XUWOPc9D1GohTpKXGKMVx2qebMVk3JPDeVc6o6hPaA040i6k67rIWx4++Pkv
        TP3yVMV27KMlhd4/M4aPL07i08uzuDJ/FUvLX2L15m1s3PkWd767h5u3v8byVzewcPULzMzO4RPpmLNj
        5xGEERxpUdYntAaKPvbEbRb5mP5JzgHeAYm5jEN5o5MkRZ7liplihjQVyryi/M7I7vVcrWFXFPUJrQG2
        izpAhKHvy10IgCRUkWPVYketd1xybVGf0Bro6WURDIMArVDEJXL88vWTkNAaKNzygGmFoew+gmxfxTjq
        HCqhPMt+GPhhtz6hNRBQRIQjiRSekrf/je9/UxF5jCRN0FaZxwPXsFtUfdYWaA2E8paHUSRtJDtHgvFH
        f2JSuoARSIVtvPveKD66MIHpSzOY+3wBi0sruLG6hvWNTfU9WF1bx5J8H+YXrqnvxQXpmDOjY8jbbdWO
        1CC0BmLpX7ZaIr2MdoJLjzrnACMN5Hmm8vpBlqWIpTY1CK2BhAeHJCTCdpbIDHdN0VSNU7mepmy147Nb
        WyKhNVAkkhTL5JlnIszIcXHtJKQGoTXQOVT0O/ivSA1CayDPOyfbIEkNQmtgmOgx8D/+Nesa8DhBV8Mg
        tahZGHhV+I7wvHB8SKQWNak9curoB90Mk6I5cuoFn8O7j7dtmFYAAAAASUVORK5CYII=
</value>
  </data>
</root>